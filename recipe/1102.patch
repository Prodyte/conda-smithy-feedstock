From 7776f7648071f9bee19cb6a99c684bb7863cabb7 Mon Sep 17 00:00:00 2001
From: John Kirkham <jakirkham@gmail.com>
Date: Tue, 2 Jul 2019 14:54:23 -0400
Subject: [PATCH 1/3] Make license file comment a hint

This relaxes the license file check to a hint.
---
 conda_smithy/lint_recipe.py | 7 +++++++
 news/license.rst            | 2 +-
 tests/test_lint_recipe.py   | 5 +++--
 3 files changed, 11 insertions(+), 3 deletions(-)

diff --git a/conda_smithy/lint_recipe.py b/conda_smithy/lint_recipe.py
index 50ceedec..68877e62 100644
--- a/conda_smithy/lint_recipe.py
+++ b/conda_smithy/lint_recipe.py
@@ -443,6 +443,13 @@ def lintify(meta, recipe_dir=None, conda_forge=False):
                     "See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-builds"
                 )
 
+    # 3: License should be packaged
+    license_family = about_section.get("license_family", license).lower()
+    license_file = about_section.get("license_file", "")
+    needed_families = ["gpl", "bsd", "mit", "apache", "psf"]
+    if license_file == "" and any(f for f in needed_families if f in license_family):
+        hints.append("license_file entry is missing, but is expected.")
+
     return lints, hints
 
 
diff --git a/news/license.rst b/news/license.rst
index dd08cdfb..7a5ba95c 100644
--- a/news/license.rst
+++ b/news/license.rst
@@ -1,6 +1,6 @@
 **Added:**
 
-* license_file is required for GPL, MIT, BSD, APACHE, PSF
+* license_file is hinted for GPL, MIT, BSD, APACHE, PSF
 
 **Fixed:**
 
diff --git a/tests/test_lint_recipe.py b/tests/test_lint_recipe.py
index 71b4597b..fe1f56c8 100644
--- a/tests/test_lint_recipe.py
+++ b/tests/test_lint_recipe.py
@@ -570,7 +570,7 @@ def test_redundant_license(self):
         )
         self.assertIn(expected_message, lints)
 
-    def test_license_file_required(self):
+    def test_license_file_present(self):
         meta = {
             "about": {
                 "home": "a URL",
@@ -582,7 +582,8 @@ def test_license_file_required(self):
         expected_message = (
             "license_file entry is missing, but is required."
         )
-        self.assertIn(expected_message, lints)
+        self.assertNotIn(expected_message, lints)
+        self.assertIn(expected_message, hints)
 
     def test_recipe_name(self):
         meta = {"package": {"name": "mp++"}}

From cf1ba203a47b2d31ff54033d28e0c8268d577c53 Mon Sep 17 00:00:00 2001
From: Isuru Fernando <isuruf@gmail.com>
Date: Tue, 2 Jul 2019 15:41:45 -0500
Subject: [PATCH 2/3] Update lint_recipe.py

---
 conda_smithy/lint_recipe.py | 7 -------
 1 file changed, 7 deletions(-)

diff --git a/conda_smithy/lint_recipe.py b/conda_smithy/lint_recipe.py
index 68877e62..049adb23 100644
--- a/conda_smithy/lint_recipe.py
+++ b/conda_smithy/lint_recipe.py
@@ -282,13 +282,6 @@ def lintify(meta, recipe_dir=None, conda_forge=False):
     except RuntimeError as e:
         lints.append(str(e))
 
-    # 12a: License family must be valid (conda-build checks for that)
-    license_family = about_section.get("license_family", license).lower()
-    license_file = about_section.get("license_file", "")
-    needed_families = ["gpl", "bsd", "mit", "apache", "psf"]
-    if license_file == "" and any(f for f in needed_families if f in license_family):
-        lints.append("license_file entry is missing, but is required.")
-
     # 13: Check that the recipe name is valid
     recipe_name = package_section.get("name", "").strip()
     if re.match("^[a-z0-9_\-.]+$", recipe_name) is None:

From 0b21f6df05c10b681c16bd9bc5a44e211718765b Mon Sep 17 00:00:00 2001
From: John Kirkham <jakirkham@gmail.com>
Date: Tue, 2 Jul 2019 17:49:20 -0400
Subject: [PATCH 3/3] Update message in test (to match current wording)

---
 tests/test_lint_recipe.py | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/tests/test_lint_recipe.py b/tests/test_lint_recipe.py
index fe1f56c8..7a9a3325 100644
--- a/tests/test_lint_recipe.py
+++ b/tests/test_lint_recipe.py
@@ -580,7 +580,7 @@ def test_license_file_present(self):
         }
         lints, hints = linter.lintify(meta)
         expected_message = (
-            "license_file entry is missing, but is required."
+            "license_file entry is missing, but is expected."
         )
         self.assertNotIn(expected_message, lints)
         self.assertIn(expected_message, hints)
